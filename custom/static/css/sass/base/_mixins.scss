@function em($pixels, $context: $browser-font-context) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }
    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $pixels / $context * 1em;

    // ref : https://css-tricks.com/snippets/sass/px-to-em-functions/
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
    background-repeat: no-repeat;
  }
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin font-size($sizeValue: 12 ){
    font-size: $sizeValue + px; //fallback for old browsers
    font-size: (0.125 * $sizeValue) + rem;
}

@mixin font-face($family,$src,$style: normal,$weight: normal) {
	@font-face {
		font-family: $family;
		src: url('#{$family}#{$src}.eot'); // IE9 compat
		src: url('#{$family}#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
			url('#{$family}#{$src}.woff') format('woff'), // standards
			url('#{$family}#{$src}.ttf') format('truetype'), // Safari, Android, iOS
			url('#{$family}#{$src}.svg##{$family}') format('svg'); // legacy iOS

		font-style: $style;
		font-weight: $weight;
	}
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin grayscale() {
    -webkit-filter: grayscale(100%);
    -moz-filter: grayscale(100%);
    -ms-filter: grayscale(100%);
    -o-filter: grayscale(100%);
    filter: grayscale(100%);
    // filter: url(grayscale.svg); /* Firefox 4+ */
    filter: gray; /* IE 6-9 */
}
@mixin ungrayscale() {
    -webkit-filter: grayscale(0%);
    -moz-filter: grayscale(0%);
    -ms-filter: grayscale(0%);
    -o-filter: grayscale(0%);
    filter: grayscale(0%);
    // filter: url(grayscale.svg); /* Firefox 4+ */
    filter: none; /* IE 6-9 */
}
// default text underline
@mixin text-underline($fonsize, $color-link) {
  background-position: 0 ($fonsize);
  background-size: 1px 1px;
  background-image: linear-gradient($color-link 50%, $color-link 50%);
  background-repeat: repeat-x;
  cursor: pointer;
}
// header underline
@mixin head-underline($fonsize, $color-link) {
  background-position: 0 ($fonsize);
  background-size: 2px 2px;
  background-image: linear-gradient($color-link 50%, $color-link 50%);
  background-repeat: repeat-x;
  cursor: pointer;
}